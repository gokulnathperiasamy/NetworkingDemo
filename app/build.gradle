apply plugin: 'com.android.application'
apply plugin: 'jacoco'
apply plugin: 'de.felixschulze.gradle.hockeyapp'

static def appVersionName() {
    return "1.1"
}

static def appVersionCode() {
    return 16
}

static def appBaseName() {
    return "WeatherMap"
}

android {
    compileSdkVersion 25
    defaultConfig {
        applicationId "com.kpgn.weathermap"
        minSdkVersion 21
        targetSdkVersion 25
        versionCode appVersionCode()
        versionName appVersionName()
        setProperty("archivesBaseName", appBaseName())
        resValue "string", "google_maps_key", (project.findProperty("GOOGLE_MAPS_API_KEY") ?: "")
        multiDexEnabled true
    }
    signingConfigs {
        release {
            storeFile file("keystore_weathermap.jks")
            storePassword 'W3@therM@p'
            keyAlias 'WeatherMap'
            keyPassword 'W3@therM@p'
        }
    }
    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            signingConfig signingConfigs.release

            android.applicationVariants.all { variant ->
                variant.outputs.all {
                    def date = new Date();
                    def formattedDate = date.format('ddMMyyyy_HHmm')
                    outputFileName = appBaseName() + "_${variant.name}_v${variant.versionName}_d" + formattedDate + ".apk"
                }
            }
        }
        flavorDimensions "build"
        productFlavors {
            dev {
                // Dev build
                dimension "build"
            }

            prod {
                // Prod build
                dimension "build"
            }
        }
    }
    testOptions {
        unitTests {
            includeAndroidResources = true
        }
        unitTests.all {
            beforeTest { desc ->
                println "Executing: ${desc.name} [${desc.className}]"
            }

            afterTest { desc, result ->
                println "Result: ${result.resultType}"
            }
        }
    }
}

hockeyapp {
    apiToken = "bc6e94da41d3480e93603140b61be44e"
    releaseType = 1
    notify = 1
    status = 2
}

tasks.withType(Test) {
    maxHeapSize = "2048m"
    jvmArgs += "-XX:MaxPermSize=512m"
    forkEvery 50
    maxParallelForks 3
}

def coverageSourceDirs = [
        'src/main/java',
]

task testDebugJacoco(type: JacocoReport, dependsOn: "testDevDebugUnitTest") {
    group = "Reporting"
    description = "Generate Jacoco coverage reports after running tests."
    reports {
        xml.enabled = true
        html.enabled = true
    }
    classDirectories = fileTree(
            dir: './build/intermediates/classes/dev/debug',
            excludes: ['**/R*.class',
            ])
    sourceDirectories = files(coverageSourceDirs)
    executionData = files("$buildDir/jacoco/testDevDebugUnitTest.exec")
    // Bit hacky but fixes https://code.google.com/p/android/issues/detail?id=69174.
    // We iterate through the compiled .class tree and rename $$ to $.
    doFirst {
        new File("$buildDir/intermediates/classes/").eachFileRecurse { file ->
            if (file.name.contains('$$')) {
                file.renameTo(file.path.replace('$$', '$'))
            }
        }
    }
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation 'com.google.firebase:firebase-core:11.6.0'
    androidTestImplementation('com.android.support.test.espresso:espresso-core:3.0.0', {
        exclude group: 'com.android.support', module: 'support-annotations'
    })
    implementation('com.google.android.gms:play-services:11.6.0', {
        exclude group: 'com.android.support'
    })
    implementation 'com.android.support:appcompat-v7:25.4.0'
    implementation 'com.android.support:design:25.4.0'
    implementation 'com.android.support:cardview-v7:25.4.0'
    implementation 'com.android.support.constraint:constraint-layout:1.0.2'

    implementation 'com.jakewharton:butterknife:8.8.1'
    annotationProcessor 'com.jakewharton:butterknife-compiler:8.8.1'
    implementation 'com.squareup.retrofit2:retrofit:2.3.0'
    implementation 'com.squareup.retrofit2:converter-gson:2.3.0'
    implementation 'com.squareup:otto:1.3.8'
    implementation 'com.squareup.picasso:picasso:2.5.2'
    implementation 'com.squareup.okhttp3:okhttp:3.9.0'
    implementation 'com.wang.avi:library:2.1.3'
    implementation 'com.readystatesoftware.chuck:library:1.1.0'

    testImplementation 'junit:junit:4.12'
    testImplementation 'org.robolectric:robolectric:3.5.1'
    testImplementation 'org.mockito:mockito-core:1.10.19'
    testImplementation('com.squareup.assertj:assertj-android:1.1.0') {
        exclude module: 'support-annotations'
    }
    androidTestCompile 'org.mockito:mockito-core:1.10.19'
    androidTestCompile('com.android.support.test:runner:0.4.1') {
        exclude module: 'support-annotations'
    }

}

apply plugin: 'com.google.gms.google-services'